#!/bin/bash

PORT="3000"
APP_DIR="/var/www"

NODE_ENV="development"
NODE_CONFIG_DIR="$APP_DIR/config"

NPM_EXEC=$(which npm)
NODE_EXEC=$(which node)
NODE_APP_ARG="$APP_DIR/bin/www"

LOG_DIR="$APP_DIR/logs"
LOG_FILE="$LOG_DIR/app.log"

PID_DIR="$APP_DIR/tmp/pids"
PID_FILE="$PID_DIR/node.pid"

pid_file_exists() {
  echo "pid exists?"
  [ -f "$PID_FILE" ]
}

get_pid() {
  echo "$(cat "$PID_FILE")"
}

is_running() {
  PID=$(get_pid)
  ! [ -z "$(ps -e | awk '{print $1}' | grep "^$PID$")" ]
}

start_process() {
  mkdir -p "$PID_DIR"
  mkdir -p "$LOG_DIR"
  cd $APP_DIR
  echo "Starting node app ..."
  PORT="$PORT" NODE_ENV="$NODE_ENV" NODE_CONFIG_DIR="$CONFIG_DIR" $NODE_EXEC $NODE_APP_ARG 1>"$LOG_FILE" 2>&1 &
  echo $! > "$PID_FILE"
  echo "Node app started with pid $!"
  cd -
}

stop_process() {
  echo "Killing nodejs"
  killall node
}

remove_pid_file() {
  echo "Removing pid file"
  rm -f "$PID_FILE"
}

start_app() {
  if [ -f "$PID_FILE" ]
  then
    if is_running
    then
      PID=$(get_pid)
      echo "Node app already running with pid $PID"
      exit 1
    else
      echo "Node app stopped, but pid file exists"
      echo "Forcing start anyways"
      remove_pid_file
      start_process
    fi
  else
    if is_running
    then
      stop_process
    fi
    start_process
  fi
}

stop_app() {
  stop_process
  remove_pid_file
}

case "$1" in
  start)
    start_app
  ;;

  stop)
    stop_app
  ;;

  restart)
    stop_app
    start_app
  ;;

  *)
    echo $USAGE
    exit 1
  ;;
esac